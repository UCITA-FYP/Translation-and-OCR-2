{"version":3,"sources":["components/TextWrapper.js","components/ImageWrapper.js","App.js","index.js"],"names":["TextWrapper","text","id","className","ImageWrapper","uploadFile","loading","type","class","name","onChange","e","App","useState","setLoading","imageUrl","setImageUrl","setText","convertImageToText","a","Tesseract","recognize","result","data","formData","FormData","append","target","files","config","headers","axios","post","res","url","console","log","message","useEffect","process","REACT_APP_API_KEY","for","value","onClick","require","default","baseURL","method","uuidv4","toString","params","from","document","getElementById","to","responseType","then","response","detectedLanguage","language","translations","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.425751fe.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TextWrapper = ({ text }) => {\n  return <textarea id=\"text-to-translate\" className=\"text-wrapper\">{text}</textarea>;\n};\n\nexport default TextWrapper;\n","import React from \"react\";\n\nconst ImageWrapper = ({ uploadFile, loading }) => {\n  return (\n    <div className=\"image-wrapper\">\n      {loading ? (\n        <h2>Processing... please wait</h2>\n      ) : (\n        <form>\n          <input\n            type=\"file\"\n            class=\"custom-file-input\"\n            name=\"image\"\n            onChange={e => uploadFile(e)}\n          />\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ImageWrapper;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Tesseract from \"tesseract.js\";\nimport TextWrapper from \"./components/TextWrapper\";\nimport ImageWrapper from \"./components/ImageWrapper\";\nimport axios from \"axios\";\n\n// create account on imgbb and go to > about section > and get that api key and put it here\n\nconst API_KEY = \"023ad1c3738db81d8e56fa1e4af437f9\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [text, setText] = useState(null);\n\n  const convertImageToText = async () => {\n    setLoading(true);\n    const result = await Tesseract.recognize(imageUrl, [\n      \"ara\",\n      \"afr\",\n      \"ben\",\n      \"bul\",\n      \"eng\",\n      \"cat\",\n      // \"chi_sim\",\n      // \"chi_tra\",\n      // \"hrv\",\n      // \"ces\",\n      // \"nld\",\n      // \"est\",\n      // \"fin\",\n      // \"ell\",\n      // \"heb\",\n      // \"hin\",\n      // \"hun\",\n      // \"isl\",\n      // \"ita\",\n      // \"ita_old\",\n      // \"kan\",\n      // \"kor\",\n      // \"lav\",\n      // \"lit\",\n      // \"msa\",\n      // \"mlt\",\n      // \"nor\",\n      // \"pol\",\n      // \"por\",\n      // \"ron\",\n      // \"srp\",\n      // \"spa\",\n      // \"spa_old\",\n      // \"swa\",\n      // \"swe\",\n      // \"dan\",\n      // \"deu\",\n      // \"fra\",\n      // \"jpn\",\n      // \"rus\",\n      // \"syr\",\n      // \"tha\",\n      // \"tur\",\n      // \"ukr\",\n      // \"vie\",\n    ], );\n    setText(result.data.text);\n    setLoading(false);\n  };\n\n  const uploadFile = async (e) => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"image\", e.target.files[0]);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      };\n\n      const res = await axios.post(\n        `https://api.imgbb.com/1/upload?key=${API_KEY}`,\n        formData,\n        config\n      );\n      setImageUrl(res.data.data.url);\n      setLoading(false);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (imageUrl != null) {\n      convertImageToText();\n    }\n  }, [imageUrl]);\n  console.log(`${process.env.REACT_APP_API_KEY}`);\n\n  function translation() {\n    const axios = require(\"axios\").default;\n    const uuidv4 = require(\"uuid/v4\");\n\n    var subscriptionKey = \"76383d7ed8264578b9d1ea4e4e8fef94\";\n    var endpoint = \"https://api.cognitive.microsofttranslator.com\";\n\n    axios({\n      baseURL: endpoint,\n      url: \"/translate\",\n      method: \"post\",\n      headers: {\n        \"Ocp-Apim-Subscription-Key\": subscriptionKey,\n        \"Content-type\": \"application/json\",\n        \"X-ClientTraceId\": uuidv4().toString(),\n      },\n      params: {\n        \"api-version\": \"3.0\",\n        from: document.getElementById(\"from-language\").value,\n        to: document.getElementById(\"select-language\").value,\n      },\n      data: [\n        {\n          text: document.getElementById(\"text-to-translate\").value,\n        },\n      ],\n      responseType: \"json\",\n    }).then((response) => {\n      if (document.getElementById(\"from-language\").value == \"\") {\n        document.getElementById(\"detected-language-result\").value =\n          response.data[0].detectedLanguage.language;\n      } else {\n        document.getElementById(\n          \"detected-language-result\"\n        ).value = document.getElementById(\"from-language\").value;\n      }\n      document.getElementById(\"translated-language-result\").value =\n        response.data[0].translations[0].to;\n      document.getElementById(\"translation-result\").value =\n        response.data[0].translations[0].text;\n    });\n  }\n  return (\n    <div class=\"App\">\n      <h1>UCITA OCR</h1>\n\n      <div class=\"container\">\n        {loading && <div className=\"loader\"></div>}\n        {text == null ? (\n          <ImageWrapper loading={loading} uploadFile={uploadFile} />\n        ) : (\n          <TextWrapper text={text} />\n        )}\n        <br></br>\n        <h1>UCITA TRANSLATION</h1>\n        <div class=\"border\">\n          <div>\n            <label for=\"select-language\">\n              <strong>Translate from:</strong>\n              {\"  \"}\n            </label>\n            <select id=\"from-language\" class=\"dropdown\">\n              <option value=\"\">Detect Language</option>\n              <option value=\"af\"> Afrikaans </option>\n              <option value=\"ar\">Arabic</option>\n              <option value=\"bn\"> Bengali </option>\n              <option value=\"bg\"> Bulgarian </option>\n              <option value=\"ca\">Catalan</option>\n              <option value=\"zh-Hans\">Chinese (Simplified)</option>\n              <option value=\"zh-Hant\">Chinese (Traditional)</option>\n              <option value=\"hr\">Croatian</option>\n              <option value=\"cs\">Czech </option>\n              <option value=\"da\">Danish</option>\n              <option value=\"nl\">Dutch </option>\n              <option value=\"en\">English</option>\n              <option value=\"et\">Estonian </option>\n              <option value=\"fr\">French</option>\n              <option value=\"fi\">Finnish </option>\n              <option value=\"de\">German</option>\n              <option value=\"el\">Greek</option>\n              <option value=\"he\">Hebrew</option>\n              <option value=\"hi\">Hindi</option>\n              <option value=\"hu\">Hungarian </option>\n              <option value=\"is\">Icelandic </option>\n              <option value=\"it\">Italian</option>\n              <option value=\"ja\">Japanese</option>\n              <option value=\"kn\">Kannada </option>\n              <option value=\"ko\">Korean</option>\n              <option value=\"lv\">Latvian </option>\n              <option value=\"lt\">Lithuanian </option>\n              <option value=\"ms\">Malay </option>\n              <option value=\"mt\"> Maltese </option>\n              <option value=\"nb\"> Norwegian </option>\n              <option value=\"pl\"> Polish </option>\n              <option value=\"pt\">Portuguese</option>\n              <option value=\"ro\"> Romanian </option>\n              <option value=\"ru\">Russian</option>\n              <option value=\"sr-Latn\">Serbian (Latin) </option>\n              <option value=\"es\">Spanish</option>\n              <option value=\"sw\"> Swahili </option>\n              <option value=\"sv\"> Swedish </option>\n              <option value=\"th\">Thai</option>\n              <option value=\"tr\">Turkish</option>\n              <option value=\"uk\"> Ukrainian </option>\n              <option value=\"vi\">Vietnamese</option>\n            </select>\n            <br></br>\n            <label for=\"select-language\">\n              <strong>Translate to:</strong>\n              {\"  \"}\n            </label>\n            <select id=\"select-language\" class=\"dropdown\">\n              <option value=\"af\"> Afrikaans </option>\n              <option value=\"ar\">Arabic</option>\n              <option value=\"bn\"> Bengali </option>\n              <option value=\"bg\"> Bulgarian </option>\n              <option value=\"ca\">Catalan</option>\n              <option value=\"zh-Hans\">Chinese (Simplified)</option>\n              <option value=\"zh-Hant\">Chinese (Traditional)</option>\n              <option value=\"hr\">Croatian</option>\n              <option value=\"cs\">Czech </option>\n              <option value=\"da\">Danish</option>\n              <option value=\"nl\">Dutch </option>\n              <option value=\"en\">English</option>\n              <option value=\"et\">Estonian </option>\n              <option value=\"fr\">French</option>\n              <option value=\"fi\">Finnish </option>\n              <option value=\"de\">German</option>\n              <option value=\"el\">Greek</option>\n              <option value=\"he\">Hebrew</option>\n              <option value=\"hi\">Hindi</option>\n              <option value=\"hu\">Hungarian </option>\n              <option value=\"is\">Icelandic </option>\n              <option value=\"it\">Italian</option>\n              <option value=\"ja\">Japanese</option>\n              <option value=\"kn\">Kannada </option>\n              <option value=\"ko\">Korean</option>\n              <option value=\"lv\">Latvian </option>\n              <option value=\"lt\">Lithuanian </option>\n              <option value=\"ms\">Malay </option>\n              <option value=\"mt\"> Maltese </option>\n              <option value=\"nb\"> Norwegian </option>\n              <option value=\"pl\"> Polish </option>\n              <option value=\"pt\">Portuguese</option>\n              <option value=\"ro\"> Romanian </option>\n              <option value=\"ru\">Russian</option>\n              <option value=\"sr-Latn\">Serbian (Latin) </option>\n              <option value=\"es\">Spanish</option>\n              <option value=\"sw\"> Swahili </option>\n              <option value=\"sv\"> Swedish </option>\n              <option value=\"th\">Thai</option>\n              <option value=\"tr\">Turkish</option>\n              <option value=\"uk\"> Ukrainian </option>\n              <option value=\"vi\">Vietnamese</option>\n            </select>\n          </div>\n          <br></br>\n          <button\n            onClick={translation}\n            type=\"submit\"\n            class=\"btn btn-primary mb-2\"\n            id=\"translate\"\n          >\n            <h3>Translate text</h3>\n          </button>\n          <div id=\"detected-language\">\n            <strong>Detected language:</strong>\n            {\"  \"}\n            <textarea id=\"detected-language-result\"></textarea>\n          </div>\n          <br></br>\n          <div id=\"detected-language\">\n            <strong>Translated to:</strong>\n            {\"  \"}\n            <textarea id=\"translated-language-result\"></textarea>\n          </div>\n          <br></br>\n          <div id=\"translator-text-response\">\n            <label for=\"translation-result\">\n              <strong>Translated text:</strong>\n              <br></br>\n            </label>\n            <textarea class=\"textarea1\" id=\"translation-result\"></textarea>\n            <br></br>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}